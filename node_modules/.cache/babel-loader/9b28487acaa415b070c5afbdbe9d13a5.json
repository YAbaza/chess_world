{"ast":null,"code":"var _jsxFileName = \"/Users/yusefabaza/Documents/chess_world/src/RandomVRandom.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Chess from \"chess.js\"; // import Chess from  \"chess.js\"(default) if recieving an error about new Chess not being a constructor\n\nimport Chessboard from \"chessboardjsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RandomVRandom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fen: \"start\"\n    };\n\n    this.timer = () => window.setTimeout(this.makeRandomMove, 1000);\n\n    this.makeRandomMove = () => {\n      let possibleMoves = this.game.moves(); // exit if the game is over\n\n      if (this.game.game_over() === true || this.game.in_draw() === true || possibleMoves.length === 0) return;\n      let randomIndex = Math.floor(Math.random() * possibleMoves.length);\n      this.game.move(possibleMoves[randomIndex]);\n      this.setState({\n        fen: this.game.fen()\n      });\n      this.timer();\n    };\n  }\n\n  componentDidMount() {\n    this.game = new Chess();\n    setTimeout(() => this.makeRandomMove(), 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.timer());\n  }\n\n  render() {\n    const {\n      fen\n    } = this.state;\n    return this.props.children({\n      position: fen\n    });\n  }\n\n}\n/* eslint react/display-name: 0 */\n\n/* eslint react/prop-types: 0 */\n\n\nRandomVRandom.propTypes = {\n  children: PropTypes.func\n};\nexport default function RandomVRandomGame() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: boardsContainer,\n    children: /*#__PURE__*/_jsxDEV(RandomVRandom, {\n      children: ({\n        position\n      }) => /*#__PURE__*/_jsxDEV(Chessboard, {\n        width: 400,\n        id: \"random\",\n        position: position,\n        transitionDuration: 300,\n        boardStyle: {\n          borderRadius: \"5px\",\n          boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_c = RandomVRandomGame;\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\",\n  width: \"100vw\",\n  marginTop: 30,\n  marginBottom: 50\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomVRandomGame\");","map":{"version":3,"sources":["/Users/yusefabaza/Documents/chess_world/src/RandomVRandom.js"],"names":["React","Component","PropTypes","Chess","Chessboard","RandomVRandom","state","fen","timer","window","setTimeout","makeRandomMove","possibleMoves","game","moves","game_over","in_draw","length","randomIndex","Math","floor","random","move","setState","componentDidMount","componentWillUnmount","clearTimeout","render","props","children","position","propTypes","func","RandomVRandomGame","boardsContainer","borderRadius","boxShadow","display","justifyContent","alignItems","width","marginTop","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAQC,KAAR,MAAoB,UAApB,C,CAAgC;;AAEhC,OAAOC,UAAP,MAAuB,eAAvB;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAGlCK,KAHkC,GAG1B;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAH0B;;AAAA,SAclCC,KAdkC,GAc1B,MAAMC,MAAM,CAACC,UAAP,CAAkB,KAAKC,cAAvB,EAAuC,IAAvC,CAdoB;;AAAA,SAgBlCA,cAhBkC,GAgBjB,MAAM;AACnB,UAAIC,aAAa,GAAG,KAAKC,IAAL,CAAUC,KAAV,EAApB,CADmB,CAGnB;;AACA,UACI,KAAKD,IAAL,CAAUE,SAAV,OAA0B,IAA1B,IACA,KAAKF,IAAL,CAAUG,OAAV,OAAwB,IADxB,IAEAJ,aAAa,CAACK,MAAd,KAAyB,CAH7B,EAKI;AAEJ,UAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,aAAa,CAACK,MAAzC,CAAlB;AACA,WAAKJ,IAAL,CAAUS,IAAV,CAAeV,aAAa,CAACM,WAAD,CAA5B;AACA,WAAKK,QAAL,CAAc;AAAEhB,QAAAA,GAAG,EAAE,KAAKM,IAAL,CAAUN,GAAV;AAAP,OAAd;AAEA,WAAKC,KAAL;AACH,KAhCiC;AAAA;;AAKlCgB,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,IAAL,GAAY,IAAIV,KAAJ,EAAZ;AACAO,IAAAA,UAAU,CAAC,MAAM,KAAKC,cAAL,EAAP,EAA8B,IAA9B,CAAV;AACH;;AAEDc,EAAAA,oBAAoB,GAAG;AACnBhB,IAAAA,MAAM,CAACiB,YAAP,CAAoB,KAAKlB,KAAL,EAApB;AACH;;AAsBDmB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEpB,MAAAA;AAAF,QAAU,KAAKD,KAArB;AACA,WAAO,KAAKsB,KAAL,CAAWC,QAAX,CAAoB;AAAEC,MAAAA,QAAQ,EAAEvB;AAAZ,KAApB,CAAP;AACH;;AArCiC;AAwCtC;;AACA;;;AAzCMF,a,CACK0B,S,GAAY;AAAEF,EAAAA,QAAQ,EAAE3B,SAAS,CAAC8B;AAAtB,C;AAyCvB,eAAe,SAASC,iBAAT,GAA6B;AACxC,sBACI;AAAK,IAAA,KAAK,EAAGC,eAAb;AAAA,2BACI,QAAC,aAAD;AAAA,gBACK,CAAC;AAAEJ,QAAAA;AAAF,OAAD,kBACG,QAAC,UAAD;AACI,QAAA,KAAK,EAAE,GADX;AAEI,QAAA,EAAE,EAAC,QAFP;AAGI,QAAA,QAAQ,EAAEA,QAHd;AAII,QAAA,kBAAkB,EAAE,GAJxB;AAKI,QAAA,UAAU,EAAE;AACRK,UAAAA,YAAY,EAAE,KADN;AAERC,UAAAA,SAAS,EAAG;AAFJ;AALhB;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;KAnBuBH,iB;AAoBxB,MAAMC,eAAe,GAAG;AACpBG,EAAAA,OAAO,EAAE,MADW;AAEpBC,EAAAA,cAAc,EAAE,cAFI;AAGpBC,EAAAA,UAAU,EAAE,QAHQ;AAIpBC,EAAAA,KAAK,EAAE,OAJa;AAKpBC,EAAAA,SAAS,EAAE,EALS;AAMpBC,EAAAA,YAAY,EAAE;AANM,CAAxB","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport  Chess  from \"chess.js\"; // import Chess from  \"chess.js\"(default) if recieving an error about new Chess not being a constructor\n\nimport Chessboard from \"chessboardjsx\";\n\nclass RandomVRandom extends Component {\n    static propTypes = { children: PropTypes.func };\n\n    state = { fen: \"start\" };\n\n    componentDidMount() {\n        this.game = new Chess();\n        setTimeout(() => this.makeRandomMove(), 1000);\n    }\n\n    componentWillUnmount() {\n        window.clearTimeout(this.timer());\n    }\n\n    timer = () => window.setTimeout(this.makeRandomMove, 1000);\n\n    makeRandomMove = () => {\n        let possibleMoves = this.game.moves();\n\n        // exit if the game is over\n        if (\n            this.game.game_over() === true ||\n            this.game.in_draw() === true ||\n            possibleMoves.length === 0\n        )\n            return;\n\n        let randomIndex = Math.floor(Math.random() * possibleMoves.length);\n        this.game.move(possibleMoves[randomIndex]);\n        this.setState({ fen: this.game.fen() });\n\n        this.timer();\n    };\n\n    render() {\n        const { fen } = this.state;\n        return this.props.children({ position: fen });\n    }\n}\n\n/* eslint react/display-name: 0 */\n/* eslint react/prop-types: 0 */\nexport default function RandomVRandomGame() {\n    return (\n        <div style= {boardsContainer}>\n            <RandomVRandom>\n                {({ position }) => (\n                    <Chessboard\n                        width={400}\n                        id=\"random\"\n                        position={position}\n                        transitionDuration={300}\n                        boardStyle={{\n                            borderRadius: \"5px\",\n                            boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n                        }}\n                    />\n                )}\n            </RandomVRandom>\n        </div>\n    );\n}\nconst boardsContainer = {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    width: \"100vw\",\n    marginTop: 30,\n    marginBottom: 50\n};\n"]},"metadata":{},"sourceType":"module"}