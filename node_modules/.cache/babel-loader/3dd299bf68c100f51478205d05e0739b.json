{"ast":null,"code":"var _jsxFileName = \"/Users/yusefabaza/Documents/chess_world/src/RandomVsRandom.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Chessboard from \"chessboardjsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chess = require(\"chess.js\");\n\nconst RandomVsRandom = () => {\n  _s();\n\n  const [chess] = useState(new Chess(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"));\n  const [fen, setFen] = useState(chess.fen());\n\n  const handleMove = move => {\n    if (chess.move(move)) {\n      const moves = chess.moves();\n\n      if (moves.length > 0) {\n        const computerMove = moves[Math.floor(Math.random() * moves.length)];\n        chess.move(computerMove);\n        setFen(chess.fen());\n      }\n\n      setFen(chess.fen());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-center\",\n    children: /*#__PURE__*/_jsxDEV(Chessboard, {\n      width: 450,\n      position: fen,\n      onDrop: move => handleMove({\n        from: move.sourceSquare,\n        to: move.targetSquare,\n        promotion: \"q\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RandomVsRandom, \"sQYE1XL4ACrrr/apGsqnXoVi67A=\");\n\n_c = RandomVsRandom;\nexport default RandomVsRandom;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomVsRandom\");","map":{"version":3,"sources":["/Users/yusefabaza/Documents/chess_world/src/RandomVsRandom.tsx"],"names":["React","useState","Chessboard","Chess","require","RandomVsRandom","chess","fen","setFen","handleMove","move","moves","length","computerMove","Math","floor","random","from","sourceSquare","to","targetSquare","promotion"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAGA,MAAMC,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AAEA,MAAMC,cAAwB,GAAG,MAAM;AAAA;;AACnC,QAAM,CAACC,KAAD,IAAUL,QAAQ,CACpB,IAAIE,KAAJ,CAAU,0DAAV,CADoB,CAAxB;AAIA,QAAM,CAACI,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAACK,KAAK,CAACC,GAAN,EAAD,CAA9B;;AAEA,QAAME,UAAU,GAAIC,IAAD,IAAqB;AACpC,QAAIJ,KAAK,CAACI,IAAN,CAAWA,IAAX,CAAJ,EAAsB;AAEd,YAAMC,KAAK,GAAGL,KAAK,CAACK,KAAN,EAAd;;AAEA,UAAIA,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AAClB,cAAMC,YAAY,GAAGF,KAAK,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,KAAK,CAACC,MAAjC,CAAD,CAA1B;AACAN,QAAAA,KAAK,CAACI,IAAN,CAAWG,YAAX;AACAL,QAAAA,MAAM,CAACF,KAAK,CAACC,GAAN,EAAD,CAAN;AACH;;AAGLC,MAAAA,MAAM,CAACF,KAAK,CAACC,GAAN,EAAD,CAAN;AACH;AACJ,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI,QAAC,UAAD;AACI,MAAA,KAAK,EAAE,GADX;AAEI,MAAA,QAAQ,EAAEA,GAFd;AAGI,MAAA,MAAM,EAAGG,IAAD,IACJD,UAAU,CAAC;AACPQ,QAAAA,IAAI,EAAEP,IAAI,CAACQ,YADJ;AAEPC,QAAAA,EAAE,EAAET,IAAI,CAACU,YAFF;AAGPC,QAAAA,SAAS,EAAE;AAHJ,OAAD;AAJlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAtCD;;GAAMhB,c;;KAAAA,c;AAwCN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Chessboard from \"chessboardjsx\";\nimport { ChessInstance, ShortMove, } from \"chess.js\";\n\nconst Chess = require(\"chess.js\");\n\nconst RandomVsRandom: React.FC = () => {\n    const [chess] = useState<ChessInstance>(\n        new Chess(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\")\n    );\n\n    const [fen, setFen] = useState(chess.fen());\n\n    const handleMove = (move: ShortMove) => {\n        if (chess.move(move)) {\n\n                const moves = chess.moves();\n\n                if (moves.length > 0) {\n                    const computerMove = moves[Math.floor(Math.random() * moves.length)];\n                    chess.move(computerMove);\n                    setFen(chess.fen());\n                }\n\n\n            setFen(chess.fen());\n        }\n    };\n\n    return (\n        <div className=\"flex-center\">\n            <Chessboard\n                width={450}\n                position={fen}\n                onDrop={(move) =>\n                    handleMove({\n                        from: move.sourceSquare,\n                        to: move.targetSquare,\n                        promotion: \"q\",\n                    })\n                }\n            />\n        </div>\n    );\n};\n\nexport default RandomVsRandom;"]},"metadata":{},"sourceType":"module"}